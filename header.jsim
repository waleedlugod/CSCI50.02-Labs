* "Lugod, Waleed"
* "Sagusay, Joseph"
* "Warain, John Victor"
.include "8clocks.jsim"
.include "nominal.jsim"
.include "stdcell.jsim"


*******************************************************************************
* Random circuit
*******************************************************************************
.subckt fx a b c d e f g out
Xn1 a b c abc nand3
Xn2 d e de nand2
Xn3 f g fg nand2
Xn4 abc de fg out nand3
.ends


*******************************************************************************
* Full Adder
*******************************************************************************
.subckt fa a b carry_in fsum fcout
Xsub1 a b tsum xor2
Xsub2 a b t1cout nand2
Xsub3 tsum carry_in fsum xor2
Xsub4 tsum carry_in t2cout nand2
Xsub5 t1cout t2cout fcout nand2
.ends


*******************************************************************************
* 32-bit Adder
*******************************************************************************
.subckt add32 a[31:0] b[31:0] c_in0 sum[31:0] c_out[31:30]
Xsum a[31:0] b[31:0] c_out[30:0] c_in0 sum[31:0] c_out[31:0] fa
.ends


*******************************************************************************
* 32-bit Counter
*******************************************************************************
.subckt counter32 reset a[31:0] f[31:0] clk
Xsub1 a[31:0] f[31:0] 0 sum[31:0] c_out[31:30] add32
Xsub2 reset#32 sum[31:0] 0#32 z[31:0] mux2
Xsub3 z[31:0] clk#32 f[31:0] dreg
.ends


*******************************************************************************
* 32-bit Adder-Subtractor
*******************************************************************************
.subckt as32 a[31:0] b[31:0] op0 fas[31:0] n v z
Xsub0 b[31:0] op0#32 p[31:0] xor2
Xsub1 a[31:0] p[31:0] op0 fas[31:0] c_out[31:30] add32
.connect fas31 n
Xsub2 c_out[31] c_out[30] v xor2
xsub3 fas[31:0] z zero32
.ends


*******************************************************************************
* 32-bit 0 checker
*******************************************************************************
.subckt zero32 a[31:0] z
Xsub0 a[31:24] a[23:16] a[15:8] a[7:0] n1out[7:0] nor4
Xsub1 n1out[7:6] n1out[5:4] n1out[3:2] n1out[1:0] n2out[1:0] nand4
Xsub2 n2out1 n2out0 z nor2
.ends


*******************************************************************************
* 32-bit Comparator
*******************************************************************************
.subckt cmp32 n v z op[2:1] fcmp[31:0]
.connect fcmp[31:1] 0
Xsub0 n v less_than xor2
Xsub1 z op1 temp1 nand2
Xsub2 less_than op2 temp2 nand2
Xsub3 temp1 temp2 fcmp[0] nand2 
.ends

*******************************************************************************
* 32-bit Shifter
*******************************************************************************
.subckt shift32 a[31:0] b[4:0] op[1:0] fshift[31:0]
* pad val
Xpad a31 op1 pad and2
* flip bits?
Xm op0#32 a[0:31] a[31:0] am[31:0] mux2
* shift 16
Xs16 b4#32 am[31:0] pad#16 am[31:16] a16s[31:0] mux2
* shift 8
Xs8 b3#32 a16s[31:0] pad#8 a16s[31:8] a8s[31:0] mux2
* shift 4
Xs4 b2#32 a8s[31:0] pad#4 a8s[31:4] a4s[31:0] mux2
* shift 2
Xs2 b1#32 a4s[31:0] pad#2 a4s[31:2] a2s[31:0] mux2
* shift 1
Xs1 b0#32 a2s[31:0] pad a2s[31:1] a1s[31:0] mux2
* unflip bits?
Xf op0#32 a1s[31:0] a1s[0:31] fshift[31:0] mux2
.ends
