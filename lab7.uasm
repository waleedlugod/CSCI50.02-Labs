|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
| This sample .uasm program processes an array of ints (defined at the DATA
| portion of this file), multiplying each int by 2.
|
| Important note: All registers r0 to r31 are initially set to 0.
|
| Happy hacking! - eric

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

.include beta.uasm          | include the standard predefined macros

        LD(r31, DATA, r0)   | r0 = memory pointed to by DATA (the array length)
                            |  (r31 is a special register that is always zero,
                            |   and this line can be shortened to LD(DATA, r0))
LOOP:   ADDC(r1, 4, r1)     | r1 += 4 (that is, advance to the next int)
        LD(r1, DATA, r2)    | r2 = memory pointed to by (r1 + DATA)
        SHLC(r2, 1, r2)     | r2 = r2 << 1 (that is, multiply r2 by 2)
        ST(r2, DATA, r1)    | memory pointed to by (DATA + r1) = r2
        SUBC(r0, 1, r0)     | r0--
        BNE(r0, LOOP)       | if r0 != 0, go back to LOOP
        HALT()              | finish execution

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

| DATA marks the beginning of user data in memory.
DATA:   LONG(5)             | length of the array
        LONG(4)
        LONG(2)
        LONG(0)
        LONG(6)
        LONG(-9)
